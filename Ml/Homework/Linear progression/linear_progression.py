# -*- coding: utf-8 -*-
"""Linear progression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1H2xhNDDoEf8hrXuQG4R5rIDT19Imtpy7
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split

# Importing the data
df = pd.read_csv("/ccp.csv.csv")
df.head()

# Extracting features (X) and target variable (y)
x = df['AP'].values  # Using 'AP' as a single feature for simplicity
y = df['PE'].values

print(X)

# Splitting the data into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

#WE ARE WRITING LINEAR REGRESSION ALGORITHM
from sklearn.linear_model import LinearRegression
ml = LinearRegression()

x_train = np.vstack((np.ones_like(x_train), x_train)).T
x_test = np.vstack((np.ones_like(x_test), x_test)).T

ml.fit(x_train,y_train)

# Predict on the test set
y_pred = ml.predict(x_test)
print(y_pred)

# Display the plot
import matplotlib.pyplot as plt
import pandas as pd

plt.figure(figsize=(10, 6))
plt.scatter(y_test,y_pred)
plt.xlabel('Actual Values')
plt.ylabel('Predicted Values')
plt.title('Actual vs. Predicted Values')
plt.grid(True)

# Create a DataFrame to display actual values, predicted values, and differences
results_df = pd.DataFrame({
    'Actual Values': y_test,
    'Predicted Values': y_pred,
    'Difference (Actual - Predicted)': y_test - y_pred
})
print(results_df)